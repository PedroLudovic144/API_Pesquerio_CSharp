// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PesqueiroNetApi.Data;

#nullable disable

namespace PesqueiroNetApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251008164706_LagosMigrations")]
    partial class LagosMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PesqueiroNetApi.Entities.Aluguel", b =>
                {
                    b.Property<int>("IdAluguel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAluguel"));

                    b.Property<DateTime?>("DataHoraDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraRetirada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EquipamentoIdEquipamentos")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioIdFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipamento")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAluguel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdAluguel");

                    b.HasIndex("EquipamentoIdEquipamentos");

                    b.HasIndex("FuncionarioIdFuncionario");

                    b.ToTable("Alugueis");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.AluguelCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdAluguel")
                        .HasColumnType("int");

                    b.Property<int?>("AluguelIdAluguel")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.HasKey("IdCliente", "IdAluguel");

                    b.HasIndex("AluguelIdAluguel");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("AlugueisClientes");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("EmailCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.ClienteComentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("ComentarioIdComentario")
                        .HasColumnType("int");

                    b.HasKey("IdComentario", "IdCliente");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("ComentarioIdComentario");

                    b.ToTable("ClientesComentarios");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComentario"));

                    b.Property<int>("Avaliacao")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataComentario")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPesqueiro")
                        .HasColumnType("int");

                    b.Property<int?>("PesqueiroIdPesqueiro")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdComentario");

                    b.HasIndex("PesqueiroIdPesqueiro");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateOnly>("DtCompra")
                        .HasColumnType("date");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCompra");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.CompraCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("CompraIdCompra")
                        .HasColumnType("int");

                    b.HasKey("IdCliente", "IdCompra");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("CompraIdCompra");

                    b.ToTable("ComprasClientes");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Equipamento", b =>
                {
                    b.Property<int>("IdEquipamentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamentos"));

                    b.Property<string>("NomeEquipamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeEquipamento")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdEquipamentos");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Especie", b =>
                {
                    b.Property<int>("IdEspecie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspecie"));

                    b.Property<string>("FornecedorEspecie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEspecie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorEspecie")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdEspecie");

                    b.ToTable("Especies");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.EspecieLago", b =>
                {
                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<int>("IdLago")
                        .HasColumnType("int");

                    b.Property<int?>("EspecieIdEspecie")
                        .HasColumnType("int");

                    b.Property<int?>("LagoIdLago")
                        .HasColumnType("int");

                    b.Property<int>("QtdPeixes")
                        .HasColumnType("int");

                    b.HasKey("IdEspecie", "IdLago");

                    b.HasIndex("EspecieIdEspecie");

                    b.HasIndex("LagoIdLago");

                    b.ToTable("EspeciesLagos");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Favorito", b =>
                {
                    b.Property<int>("IdPesqueiro")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("PesqueiroIdPesqueiro")
                        .HasColumnType("int");

                    b.HasKey("IdPesqueiro", "IdCliente");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("PesqueiroIdPesqueiro");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"));

                    b.Property<int>("IdPesqueiro")
                        .HasColumnType("int");

                    b.Property<string>("NomeFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFuncionario");

                    b.HasIndex("IdPesqueiro");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Gerencia", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipamentos")
                        .HasColumnType("int");

                    b.Property<int?>("EquipamentoIdEquipamentos")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioIdFuncionario")
                        .HasColumnType("int");

                    b.HasKey("IdFuncionario", "IdEquipamentos");

                    b.HasIndex("EquipamentoIdEquipamentos");

                    b.HasIndex("FuncionarioIdFuncionario");

                    b.ToTable("Gerencias");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Lago", b =>
                {
                    b.Property<int>("IdLago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLago"));

                    b.Property<int>("IdPesqueiro")
                        .HasColumnType("int");

                    b.Property<string>("NomeLago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PesqueiroIdPesqueiro")
                        .HasColumnType("int");

                    b.Property<int>("TamanhoLago")
                        .HasColumnType("int");

                    b.HasKey("IdLago");

                    b.HasIndex("PesqueiroIdPesqueiro");

                    b.ToTable("Lago");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Peixe", b =>
                {
                    b.Property<int>("IdPeixe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeixe"));

                    b.Property<string>("Especie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EspecieIdEspecie")
                        .HasColumnType("int");

                    b.Property<int>("IdLago")
                        .HasColumnType("int");

                    b.Property<int?>("LagoIdLago")
                        .HasColumnType("int");

                    b.Property<double?>("PesoMedio")
                        .HasColumnType("float");

                    b.HasKey("IdPeixe");

                    b.HasIndex("EspecieIdEspecie");

                    b.HasIndex("LagoIdLago");

                    b.ToTable("Peixe");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Pesqueiro", b =>
                {
                    b.Property<int>("IdPesqueiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPesqueiro"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fotos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPesqueiro");

                    b.ToTable("Pesqueiros");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduto"));

                    b.Property<int?>("CompraIdCompra")
                        .HasColumnType("int");

                    b.Property<string>("Fornecedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdPesqueiro")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdProduto")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorProduto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProduto");

                    b.HasIndex("CompraIdCompra");

                    b.HasIndex("IdPesqueiro");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Aluguel", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Equipamento", "Equipamento")
                        .WithMany("Alugueis")
                        .HasForeignKey("EquipamentoIdEquipamentos");

                    b.HasOne("PesqueiroNetApi.Entities.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioIdFuncionario");

                    b.Navigation("Equipamento");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.AluguelCliente", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Aluguel", "Aluguel")
                        .WithMany()
                        .HasForeignKey("AluguelIdAluguel");

                    b.HasOne("PesqueiroNetApi.Entities.Cliente", "Cliente")
                        .WithMany("AluguelClientes")
                        .HasForeignKey("ClienteIdCliente");

                    b.Navigation("Aluguel");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.ClienteComentario", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Cliente", "Cliente")
                        .WithMany("ClienteComentarios")
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("PesqueiroNetApi.Entities.Comentario", "Comentario")
                        .WithMany("ClienteComentarios")
                        .HasForeignKey("ComentarioIdComentario");

                    b.Navigation("Cliente");

                    b.Navigation("Comentario");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Comentario", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Pesqueiro", "Pesqueiro")
                        .WithMany("Comentarios")
                        .HasForeignKey("PesqueiroIdPesqueiro");

                    b.Navigation("Pesqueiro");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.CompraCliente", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Cliente", "Cliente")
                        .WithMany("CompraClientes")
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("PesqueiroNetApi.Entities.Compra", "Compra")
                        .WithMany("CompraClientes")
                        .HasForeignKey("CompraIdCompra");

                    b.Navigation("Cliente");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.EspecieLago", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Especie", "Especie")
                        .WithMany("EspecieLagos")
                        .HasForeignKey("EspecieIdEspecie");

                    b.HasOne("PesqueiroNetApi.Entities.Lago", "Lago")
                        .WithMany("EspecieLagos")
                        .HasForeignKey("LagoIdLago");

                    b.Navigation("Especie");

                    b.Navigation("Lago");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Favorito", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Cliente", "Cliente")
                        .WithMany("Favoritos")
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("PesqueiroNetApi.Entities.Pesqueiro", "Pesqueiro")
                        .WithMany("Favoritos")
                        .HasForeignKey("PesqueiroIdPesqueiro");

                    b.Navigation("Cliente");

                    b.Navigation("Pesqueiro");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Funcionario", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Pesqueiro", "Pesqueiro")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdPesqueiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pesqueiro");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Gerencia", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Equipamento", "Equipamento")
                        .WithMany("Gerencias")
                        .HasForeignKey("EquipamentoIdEquipamentos");

                    b.HasOne("PesqueiroNetApi.Entities.Funcionario", "Funcionario")
                        .WithMany("Gerencias")
                        .HasForeignKey("FuncionarioIdFuncionario");

                    b.Navigation("Equipamento");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Lago", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Pesqueiro", "Pesqueiro")
                        .WithMany()
                        .HasForeignKey("PesqueiroIdPesqueiro");

                    b.Navigation("Pesqueiro");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Peixe", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Especie", null)
                        .WithMany("PeixesCapturados")
                        .HasForeignKey("EspecieIdEspecie");

                    b.HasOne("PesqueiroNetApi.Entities.Lago", "Lago")
                        .WithMany()
                        .HasForeignKey("LagoIdLago");

                    b.Navigation("Lago");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Produto", b =>
                {
                    b.HasOne("PesqueiroNetApi.Entities.Compra", "Compra")
                        .WithMany("Produtos")
                        .HasForeignKey("CompraIdCompra");

                    b.HasOne("PesqueiroNetApi.Entities.Pesqueiro", "Pesqueiro")
                        .WithMany("Produtos")
                        .HasForeignKey("IdPesqueiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Pesqueiro");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Cliente", b =>
                {
                    b.Navigation("AluguelClientes");

                    b.Navigation("ClienteComentarios");

                    b.Navigation("CompraClientes");

                    b.Navigation("Favoritos");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Comentario", b =>
                {
                    b.Navigation("ClienteComentarios");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Compra", b =>
                {
                    b.Navigation("CompraClientes");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Equipamento", b =>
                {
                    b.Navigation("Alugueis");

                    b.Navigation("Gerencias");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Especie", b =>
                {
                    b.Navigation("EspecieLagos");

                    b.Navigation("PeixesCapturados");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Funcionario", b =>
                {
                    b.Navigation("Gerencias");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Lago", b =>
                {
                    b.Navigation("EspecieLagos");
                });

            modelBuilder.Entity("PesqueiroNetApi.Entities.Pesqueiro", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Favoritos");

                    b.Navigation("Funcionarios");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
